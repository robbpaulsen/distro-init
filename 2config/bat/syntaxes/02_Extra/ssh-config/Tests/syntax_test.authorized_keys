# SYNTAX TEST "Packages/SSH Config/Authorized Keys.sublime-syntax"

# Comment
# ^^^^^^^ comment.line.number-sign

ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHeDxE1jPGCLo51RSF7CeJbp4raIc3xo6TBiqkz4WRWI you@example.com
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.line.authorized-key
#                                                                                               ^ - meta.line.authorized-key
# ^^^^^^^^^ support.type.key-type
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ variable.other.fingerprint
#                                                                                ^^^^^^^^^^^^^^^ meta.annotation.identifier string.unquoted

# Comments allowed at start of line
ssh-rsa AAAAB3NzaLiPk== user@example.net
from="*.sales.example.net,!pc.sales.example.net" ssh-rsa AAAAB3N9Q== john@example.net
#^^^ keyword.other
#   ^ keyword.operator.assignment
#    ^ punctuation.definition.string.begin
#     ^ keyword.operator.wildcard
command="dump /home",no-pty,no-port-forwarding ssh-rsa AAAAC3N51R== example.net
permitopen="192.0.2.1:80",permitopen="192.0.2.2:25" ssh-rsa AAAAB3N21S==
permitlisten="localhost:8080",permitopen="localhost:22000" ssh-rsa AAAAB3N21S==
tunnel="0",command="sh /etc/netstart tun0" ssh-rsa AAAAB3N21S== jane@example.net
restrict,command="uptime" ssh-rsa AAAAB3N21S== user@example.net
restrict,pty,command="nethack" ssh-rsa AAAAB3N21S== user@example.net
no-touch-required sk-ecdsa-sha2-nistp256@openssh.com AAAAB3N21S== user@example.net
expiry-time="20190606" ssh-rsa AAAAB3N21S== user@example.net
# ^^^^^^^^^ keyword.other
#          ^ keyword.operator.assignment
#           ^ punctuation.definition.string.begin
#            ^^^^^^^^ constant
#           ^^^^^^^^^^ string.quoted.double
#                    ^ punctuation.definition.string.end
#                      ^^^^^^^ support.type.key-type
environment="NAME=value",environment="NAME2=value2" ssh-rsa AAAAB3N21S==
# ^^^^^^^^^ keyword.other
#          ^ keyword.operator.assignment
#            ^^^^ variable.other.readwrite
#                ^ keyword.operator.assignment
